#
#
server.port=4040
#
# defaults
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#
# tweet message out
spring.cloud.stream.bindings.tweetmsgout.destination=tweegmsgtopic
spring.cloud.stream.bindings.tweetmsgout.producer.header-mode=raw
#
# tweet message in
spring.cloud.stream.bindings.tweetmsgin.destination=tweegmsgtopic
spring.cloud.stream.bindings.tweetmsgin.consumer.header-mode=raw 
#
# tweet message counts out
spring.cloud.stream.bindings.tweetmsgcntout.destination=tweetmsgcnttopic
spring.cloud.stream.bindings.tweetmsgcntout.producer.use-native-encoding=true
spring.cloud.stream.kafka.streams.bindings.tweetmsgcntout.producer.value-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.tweetmsgcntout.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#
# tweet message counts in
spring.cloud.stream.bindings.tweetmsgcntin.destination=tweetmsgcnttopic
spring.cloud.stream.bindings.tweetmsgcntin.group=tweetmsgcntin
spring.cloud.stream.bindings.tweetmsgcntin.consumer.header-mode=raw 
spring.cloud.stream.bindings.tweetmsgcntin.content-type=application/json
spring.cloud.stream.bindings.tweetmsgcntin.consumer.use-native-decoding=true
spring.cloud.stream.kafka.streams.bindings.tweetmsgcntin.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.tweetmsgcntin.consumer.value-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
